{"version":3,"sources":["../src/app.js"],"names":["app","Koa","router","Router","all","endpoint","graphqlSettingsPerReq","req","dataloaders","console","log","schema","graphiql","process","env","NODE_ENV","context","formatError","error","message","locations","stack","graphqlServer","use","routes","allowedMethods"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;;;;;;;AAEA,IAAMA,GAAG,GAAG,IAAIC,YAAJ,EAAZ;AACA,IAAMC,MAAM,GAAG,IAAIC,kBAAJ,EAAf;AAEAD,MAAM,CAACE,GAAP,CACE,aADF,EAEE,gDAAc;AACZC,EAAAA,QAAQ,EAAE;AADE,CAAd,CAFF;;AAOA,IAAMC,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtBC,YAAAA,WAFsB,GAER,+BAFQ;AAG5BC,YAAAA,OAAO,CAACC,GAAR,CAAYC,eAAZ;AAH4B,6CAKrB;AACLC,cAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAD9B;AAELJ,cAAAA,MAAM,EAANA,eAFK;AAGLK,cAAAA,OAAO,EAAE;AACPT,gBAAAA,GAAG,EAAHA,GADO;AAEPC,gBAAAA,WAAW,EAAXA;AAFO,eAHJ;AAOLS,cAAAA,WAAW,EAAE,qBAAAC,KAAK,EAAI;AACpBT,gBAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACC,OAAlB;AACAV,gBAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACE,SAAlB;AACAX,gBAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACG,KAAlB;AAEA,uBAAO;AACLF,kBAAAA,OAAO,EAAED,KAAK,CAACC,OADV;AAELC,kBAAAA,SAAS,EAAEF,KAAK,CAACE,SAFZ;AAGLC,kBAAAA,KAAK,EAAEH,KAAK,CAACG;AAHR,iBAAP;AAKD;AAjBI,aALqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBf,qBAAqB;AAAA;AAAA;AAAA,GAA3B;;AA0BA,IAAMgB,aAAa,GAAG,yBAAQ,yBAAYhB,qBAAZ,CAAR,CAAtB,C,CAEA;;AACAJ,MAAM,CAACE,GAAP,CAAW,UAAX,EAAuBkB,aAAvB;AAEAtB,GAAG,CAACuB,GAAJ,CAAQ,qBAAR;AACAvB,GAAG,CAACuB,GAAJ,CAAQrB,MAAM,CAACsB,MAAP,EAAR,EAAyBD,GAAzB,CAA6BrB,MAAM,CAACuB,cAAP,EAA7B;eAEezB,G","sourcesContent":["\n// import 'isomorphic-fetch';\n\nimport Koa from 'koa';\nimport bodyParser from 'koa-bodyparser';\nimport convert from 'koa-convert';\nimport cors from 'kcors';\nimport graphqlHttp from 'koa-graphql';\nimport Router from 'koa-router';\nimport { koaPlayground } from 'graphql-playground-middleware';\n\n\nimport schema from './schema';\nimport registerLoaders from './registerLoaders';\n\nconst app = new Koa();\nconst router = new Router();\n\nrouter.all(\n  '/playground',\n  koaPlayground({\n    endpoint: '/graphql',\n  }),\n);\n\nconst graphqlSettingsPerReq = async req => {\n\n  const dataloaders = registerLoaders();\n  console.log(schema)\n\n  return {\n    graphiql: process.env.NODE_ENV !== 'production',\n    schema,\n    context: {\n      req,\n      dataloaders,\n    },\n    formatError: error => {\n      console.log(error.message);\n      console.log(error.locations);\n      console.log(error.stack);\n\n      return {\n        message: error.message,\n        locations: error.locations,\n        stack: error.stack,\n      };\n    },\n  };\n};\n\nconst graphqlServer = convert(graphqlHttp(graphqlSettingsPerReq));\n\n// graphql standard route\nrouter.all('/graphql', graphqlServer);\n\napp.use(cors());\napp.use(router.routes()).use(router.allowedMethods());\n\nexport default app;\n"],"file":"app.js"}
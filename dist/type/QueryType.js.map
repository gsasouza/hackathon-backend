{"version":3,"sources":["../../src/type/QueryType.ts"],"names":["GraphQLObjectType","name","description","fields","builds","type","GraphQLList","BuildType","resolve","obj","args","context","BuildLoader","loadBuilds","paths","PathType","PathLoader","loadPaths","path","id","GraphQLID","load"],"mappings":";;;;;;;AAEA;;AACA;;AAEA;;AACA;;AAGA;;AACA;;;;;;AAVA;eAYe,IAAIA,0BAAJ,CAAsB;AACnCC,EAAAA,IAAI,EAAE,OAD6B;AAEnCC,EAAAA,WAAW,EAAE,4BAFsB;AAGnCC,EAAAA,MAAM,EAAE;AAAA,WAAO;AACbC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,IAAIC,oBAAJ,CAAgBC,kBAAhB,CADA;AAENC,QAAAA,OAAO,EAAE,iBAACC,GAAD,EAAMC,IAAN,EAAYC,OAAZ;AAAA,iBAAwBC,WAAW,CAACC,UAAZ,CAAuBF,OAAvB,EAAgCD,IAAhC,CAAxB;AAAA;AAFH,OADK;AAKbI,MAAAA,KAAK,EAAE;AACLT,QAAAA,IAAI,EAAE,IAAIC,oBAAJ,CAAgBS,iBAAhB,CADD;AAELP,QAAAA,OAAO,EAAE,iBAACC,GAAD,EAAMC,IAAN,EAAYC,OAAZ;AAAA,iBAAwBK,UAAU,CAACC,SAAX,CAAqBN,OAArB,EAA8BD,IAA9B,CAAxB;AAAA;AAFJ,OALM;AASbQ,MAAAA,IAAI,EAAE;AACJb,QAAAA,IAAI,EAAEU,iBADF;AAEJL,QAAAA,IAAI,EAAE;AACJS,UAAAA,EAAE,EAAE;AACFd,YAAAA,IAAI,EAAEe;AADJ;AADA,SAFF;AAOJZ,QAAAA,OAAO,EAAE,iBAACC,GAAD,EAAMC,IAAN,EAAYC,OAAZ;AAAA,iBAAwBK,UAAU,CAACK,IAAX,CAAgBV,OAAhB,EAAyB,gCAAaQ,EAAb,EAAiBA,EAA1C,CAAxB;AAAA;AAPL;AATO,KAAP;AAAA;AAH2B,CAAtB,C","sourcesContent":["// @flow\n\nimport {GraphQLObjectType, GraphQLString, GraphQLNonNull, GraphQLID, GraphQLBoolean, GraphQLList} from 'graphql';\nimport { globalIdField, connectionArgs, fromGlobalId } from 'graphql-relay';\n\nimport * as BuildLoader from '../build/BuidLoader';\nimport BuildType from '../modules/build/BuildType';\n\n\nimport * as PathLoader from '../path/PathLoader';\nimport PathType from '../modules/path/PathType';\n\nexport default new GraphQLObjectType({\n  name: 'Query',\n  description: 'The root of all... queries',\n  fields: () => ({\n    builds: {\n      type: new GraphQLList(BuildType),\n      resolve: (obj, args, context) => BuildLoader.loadBuilds(context, args),\n    },\n    paths: {\n      type: new GraphQLList(PathType),\n      resolve: (obj, args, context) => PathLoader.loadPaths(context, args),\n    },\n    path: {\n      type: PathType,\n      args: {\n        id: {\n          type: GraphQLID\n        },\n      },\n      resolve: (obj, args, context) => PathLoader.load(context, fromGlobalId(id).id),\n    }\n  })\n});\n"],"file":"QueryType.js"}